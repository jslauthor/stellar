{"version":3,"sources":["webpack:///./src/js/utils/applescript/applescript.js?ad1b"],"names":[],"mappings":";;;;;;;AAAA,KAAI,KAAK,GAAG,mBAAO,CAAC,GAAe,CAAC,CAAC,KAAK,CAAC;AAC3C,QAAO,CAAC,OAAO,GAAG,mBAAO,CAAC,GAAsB,CAAC,CAAC;AAClD,KAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC;;;AAGlC,QAAO,CAAC,SAAS,GAAG,WAAW,CAAC;;;AAGhC,QAAO,CAAC,QAAQ,GAAG,SAAS,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE;AACzD,OAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACxB,aAAQ,GAAG,IAAI,CAAC;AAChB,SAAI,GAAG,EAAE,CAAC;IACX;AACD,UAAO,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;EAC7C;;;AAGD,QAAO,CAAC,UAAU,GAAG,SAAS,UAAU,CAAC,GAAG,EAAE,QAAQ,EAAE;AACtD,UAAO,cAAc,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;EACtC;;AAID,UAAS,cAAc,CAAC,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE;AACjD,OAAI,QAAQ,GAAG,KAAK,CAAC;AACrB,OAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACxB,aAAQ,GAAG,IAAI,CAAC;AAChB,SAAI,GAAG,EAAE,CAAC;AACV,aAAQ,GAAG,IAAI,CAAC;IACjB;;;AAGD,OAAI,CAAC,QAAQ,EAAE;;AAEb,SAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACzB;AACD,OAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACpB,OAAI,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;;AAEjD,aAAU,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AAC/B,aAAU,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;;AAE/B,cAAW,CAAC,EAAE,CAAC,MAAM,EAAE,UAAS,IAAI,EAAE;AACpC,SAAI,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC5C,SAAI,GAAG,CAAC;AACR,SAAI,IAAI,EAAE;;;AAGR,UAAG,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACzC,UAAG,CAAC,WAAW,GAAG,SAAS,CAAC;AAC5B,UAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;MACrB;AACD,aAAQ,CAAC,GAAG,EAAE,MAAM,EAAE,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC,CAAC;;AAEH,OAAI,QAAQ,EAAE;;AAEZ,gBAAW,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AACnC,gBAAW,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;IACzB;EACF;;AAED,UAAS,UAAU,CAAC,MAAM,EAAE;AAC1B,SAAM,CAAC,IAAI,GAAG,EAAE,CAAC;AACjB,SAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AAC3B,SAAM,CAAC,EAAE,CAAC,MAAM,EAAE,UAAS,KAAK,EAAE;AAAE,WAAM,CAAC,IAAI,IAAI,KAAK,CAAC;IAAE,CAAC,CAAC","sourcesContent":["var spawn = require(\"child_process\").spawn;\nexports.Parsers = require(\"./applescript-parser\");\nvar parse = exports.Parsers.parse;\n\n// Path to 'osascript'. By default search PATH.\nexports.osascript = \"osascript\";\n\n// Execute a *.applescript file.\nexports.execFile = function execFile(file, args, callback) {\n  if (!Array.isArray(args)) {\n    callback = args;\n    args = [];\n  }\n  return runApplescript(file, args, callback);\n}\n\n// Execute a String as AppleScript.\nexports.execString = function execString(str, callback) {\n  return runApplescript(str, callback);\n}\n\n\n\nfunction runApplescript(strOrPath, args, callback) {\n  var isString = false;\n  if (!Array.isArray(args)) {\n    callback = args;\n    args = [];\n    isString = true;\n  }\n  \n  // args get added in reverse order with 'unshift'\n  if (!isString) {\n    // The name of the file is the final arg if 'execFile' was called.\n    args.unshift(strOrPath);\n  }\n  args.unshift(\"-ss\"); // To output machine-readable text.\n  var interpreter = spawn(exports.osascript, args);\n  \n  bufferBody(interpreter.stdout);\n  bufferBody(interpreter.stderr);\n\n  interpreter.on('exit', function(code) {\n    var result = parse(interpreter.stdout.body);\n    var err;\n    if (code) {\n      // If the exit code was something other than 0, we're gonna\n      // return an Error object.\n      err = new Error(interpreter.stderr.body);\n      err.appleScript = strOrPath;\n      err.exitCode = code;\n    }\n    callback(err, result, interpreter.stderr.body);\n  });\n  \n  if (isString) {\n    // Write the given applescript String to stdin if 'execString' was called.\n    interpreter.stdin.write(strOrPath);\n    interpreter.stdin.end();\n  }\n}\n\nfunction bufferBody(stream) {\n  stream.body = \"\";\n  stream.setEncoding(\"utf8\");\n  stream.on(\"data\", function(chunk) { stream.body += chunk; });\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/utils/applescript/applescript.js\n **/"],"sourceRoot":"","file":"0.edf65590ebc9153c1fc3.hot-update.js"}