{"version":3,"sources":["webpack:///./src/js/actions/ReviewAction.js?2ecd","webpack:///./src/js/actions/ReviewAction.js?cd8e*"],"names":[],"mappings":"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","sourcesContent":["var alt = require(\"../alt\")\nvar request = require('browser-request')\nvar uuid = require('node-uuid')\nvar InterpreterUtil = require('../utils/InterpreterUtil')\nvar _ = require('lodash')\nvar Review = require('../vo/Review')\nvar NotificationUtil = require('../utils/NotificationUtil')\nvar OSXUtil = require('../utils/OSXUtil')\n\nclass ReviewAction {\n\n    constructor() {\n        this.generateActions(\n            'showAddReviewPopup',\n            'hideAddReviewPopup',\n            'toggleEditing',\n            'toggleNotifications',\n            'resetScrollToBottom'\n        )\n    }\n\n    toggleRunOnLogin() {\n\n        OSXUtil.checkIfRunOnLoginEnabled(function(arg, enabled) {\n\n            function enableResult(enabled) {\n                this.actions.updateRunOnLogin(enabled == null)\n            }\n\n            function disableResult(enabled) {\n                this.actions.updateRunOnLogin(!(enabled == null))\n            }\n\n            if (!enabled)\n                OSXUtil.enableRunOnLogin(enableResult.bind(this))\n            else\n                OSXUtil.disableRunOnLogin(disableResult.bind(this))\n\n        }.bind(this))\n\n        this.dispatch()\n    }\n\n    checkRunOnLogin() {\n\n        OSXUtil.checkIfRunOnLoginEnabled(function(arg, enabled) {\n            this.actions.updateRunOnLogin(enabled)\n        }.bind(this))\n\n        this.dispatch()\n    }\n\n    updateRunOnLogin(enabled) {\n        this.dispatch(enabled)\n    }\n\n    toggleMonitoring() {\n        if (!this.alt.stores.ReviewStore.getState().isMonitoring)\n            this.actions.updateAll()\n\n        this.dispatch();\n    }\n\n    addReview(url) {\n\n        var type\n        if (url.indexOf('amazon.com') != -1)\n            type = this.alt.stores.ConfigStore.getAmazonType()\n        else if (url.indexOf('goodreads.com') != -1)\n            type = this.alt.stores.ConfigStore.getGoodreadsType()\n\n        var review = new Review(url, type);\n\n        this.actions.requestReview(review)\n        this.dispatch(review)\n    }\n\n    requestReview(review) {\n\n        if (review.isDeleted)\n            return false;\n\n        var self = this\n        request(review.url, function(er, response, body) {\n\n            review.loading = false\n\n            if (review.isDeleted || _.isUndefined(body))\n                return false;\n\n            review.lastUpdate = new Date()\n            review.lastStatus = {stars: review.stars, numReviews: review.numReviews}\n\n            if (er == null) {\n                switch (review.type) {\n                    case self.alt.stores.ConfigStore.getGoodreadsType():\n                        review = InterpreterUtil.interpretGoodreads(body, review)\n                        break;\n                    case self.alt.stores.ConfigStore.getAmazonType():\n                    default:\n                        review = InterpreterUtil.interpretAmazon(body, review)\n                }\n\n                if (!review.hasNew) {\n                    review.hasNew = review.hasTitle && !review.error && (review.lastStatus.numReviews != review.numReviews) || (review.lastStatus.stars != review.stars)\n\n                    // create notification\n                    if (review.hasNew)\n                        NotificationUtil.createNotification(review.title + \" now has \" + review.numReviews + \" reviews!\")\n                }\n            }\n\n            review.error = er != null || !review.hasTitle;\n\n            self.actions.reviewComplete(review)\n        });\n\n        this.dispatch(review)\n    }\n\n    allComplete() {\n        this.dispatch();\n    }\n\n    reviewComplete(review) {\n        this.dispatch(review)\n\n        let reviews = this.alt.stores.ReviewStore.getState().reviews;\n        let hasLoading = false;\n\n        _.each(reviews, function(review) {\n            if (review.loading)\n                hasLoading = true\n\n            if (hasLoading)\n                return false\n        })\n\n        if (!hasLoading)\n            this.actions.allComplete()\n    }\n\n    updateReview(review) {\n        var elapsedTime = new Date().getTime() - ((review.lastUpdate && Date.parse(review.lastUpdate)) || 0)\n        if (!review.loading || elapsedTime >= 60000)\n        {\n            review.loading = true\n            review.error = false\n            this.actions.requestReview(review)\n            this.dispatch()\n        }\n    }\n\n    deleteReview(id) {\n        let reviews = this.alt.stores.ReviewStore.getState().reviews;\n\n        if (reviews[id]) {\n            reviews[id].isDeleted = true\n            delete reviews[id]\n        }\n\n        this.dispatch(reviews)\n    }\n\n    updateAll() {\n        let self = this\n        let reviews = this.alt.stores.ReviewStore.getState().reviews;\n\n        _.each(reviews, function(review) {\n            self.actions.updateReview(review)\n        })\n\n        this.dispatch()\n    }\n\n    markAsSeen(reviewID) {\n        this.dispatch(reviewID)\n    }\n\n    markAllAsSeen() {\n        let self = this\n        let reviews = this.alt.stores.ReviewStore.getState().reviews;\n\n        _.each(reviews, function(review) {\n            self.actions.markAsSeen(review.id)\n        })\n\n        this.dispatch()\n    }\n\n}\n\nmodule.exports = alt.createActions(ReviewAction)\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/actions/ReviewAction.js\n **/","module.exports = \"\\\"use strict\\\";\\n\\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\\n\\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } };\\n\\nvar alt = require(\\\"../alt\\\");\\nvar request = require(\\\"browser-request\\\");\\nvar uuid = require(\\\"node-uuid\\\");\\nvar InterpreterUtil = require(\\\"../utils/InterpreterUtil\\\");\\nvar _ = require(\\\"lodash\\\");\\nvar Review = require(\\\"../vo/Review\\\");\\nvar NotificationUtil = require(\\\"../utils/NotificationUtil\\\");\\nvar OSXUtil = require(\\\"../utils/OSXUtil\\\");\\n\\nvar ReviewAction = (function () {\\n    function ReviewAction() {\\n        _classCallCheck(this, ReviewAction);\\n\\n        this.generateActions(\\\"showAddReviewPopup\\\", \\\"hideAddReviewPopup\\\", \\\"toggleEditing\\\", \\\"toggleNotifications\\\", \\\"resetScrollToBottom\\\");\\n    }\\n\\n    _createClass(ReviewAction, {\\n        toggleRunOnLogin: {\\n            value: function toggleRunOnLogin() {\\n\\n                OSXUtil.checkIfRunOnLoginEnabled((function (arg, enabled) {\\n\\n                    function enableResult(enabled) {\\n                        this.actions.updateRunOnLogin(enabled == null);\\n                    }\\n\\n                    function disableResult(enabled) {\\n                        this.actions.updateRunOnLogin(!(enabled == null));\\n                    }\\n\\n                    if (!enabled) OSXUtil.enableRunOnLogin(enableResult.bind(this));else OSXUtil.disableRunOnLogin(disableResult.bind(this));\\n                }).bind(this));\\n\\n                this.dispatch();\\n            }\\n        },\\n        checkRunOnLogin: {\\n            value: function checkRunOnLogin() {\\n\\n                OSXUtil.checkIfRunOnLoginEnabled((function (arg, enabled) {\\n                    this.actions.updateRunOnLogin(enabled);\\n                }).bind(this));\\n\\n                this.dispatch();\\n            }\\n        },\\n        updateRunOnLogin: {\\n            value: function updateRunOnLogin(enabled) {\\n                this.dispatch(enabled);\\n            }\\n        },\\n        toggleMonitoring: {\\n            value: function toggleMonitoring() {\\n                if (!this.alt.stores.ReviewStore.getState().isMonitoring) this.actions.updateAll();\\n\\n                this.dispatch();\\n            }\\n        },\\n        addReview: {\\n            value: function addReview(url) {\\n\\n                var type;\\n                if (url.indexOf(\\\"amazon.com\\\") != -1) type = this.alt.stores.ConfigStore.getAmazonType();else if (url.indexOf(\\\"goodreads.com\\\") != -1) type = this.alt.stores.ConfigStore.getGoodreadsType();\\n\\n                var review = new Review(url, type);\\n\\n                this.actions.requestReview(review);\\n                this.dispatch(review);\\n            }\\n        },\\n        requestReview: {\\n            value: function requestReview(review) {\\n\\n                if (review.isDeleted) {\\n                    return false;\\n                }var self = this;\\n                request(review.url, function (er, response, body) {\\n\\n                    review.loading = false;\\n\\n                    if (review.isDeleted || _.isUndefined(body)) return false;\\n\\n                    review.lastUpdate = new Date();\\n                    review.lastStatus = { stars: review.stars, numReviews: review.numReviews };\\n\\n                    if (er == null) {\\n                        switch (review.type) {\\n                            case self.alt.stores.ConfigStore.getGoodreadsType():\\n                                review = InterpreterUtil.interpretGoodreads(body, review);\\n                                break;\\n                            case self.alt.stores.ConfigStore.getAmazonType():\\n                            default:\\n                                review = InterpreterUtil.interpretAmazon(body, review);\\n                        }\\n\\n                        if (!review.hasNew) {\\n                            review.hasNew = review.hasTitle && !review.error && review.lastStatus.numReviews != review.numReviews || review.lastStatus.stars != review.stars;\\n\\n                            // create notification\\n                            if (review.hasNew) NotificationUtil.createNotification(review.title + \\\" now has \\\" + review.numReviews + \\\" reviews!\\\");\\n                        }\\n                    }\\n\\n                    review.error = er != null || !review.hasTitle;\\n\\n                    self.actions.reviewComplete(review);\\n                });\\n\\n                this.dispatch(review);\\n            }\\n        },\\n        allComplete: {\\n            value: function allComplete() {\\n                this.dispatch();\\n            }\\n        },\\n        reviewComplete: {\\n            value: function reviewComplete(review) {\\n                this.dispatch(review);\\n\\n                var reviews = this.alt.stores.ReviewStore.getState().reviews;\\n                var hasLoading = false;\\n\\n                _.each(reviews, function (review) {\\n                    if (review.loading) hasLoading = true;\\n\\n                    if (hasLoading) return false;\\n                });\\n\\n                if (!hasLoading) this.actions.allComplete();\\n            }\\n        },\\n        updateReview: {\\n            value: function updateReview(review) {\\n                var elapsedTime = new Date().getTime() - (review.lastUpdate && Date.parse(review.lastUpdate) || 0);\\n                if (!review.loading || elapsedTime >= 60000) {\\n                    review.loading = true;\\n                    review.error = false;\\n                    this.actions.requestReview(review);\\n                    this.dispatch();\\n                }\\n            }\\n        },\\n        deleteReview: {\\n            value: function deleteReview(id) {\\n                var reviews = this.alt.stores.ReviewStore.getState().reviews;\\n\\n                if (reviews[id]) {\\n                    reviews[id].isDeleted = true;\\n                    delete reviews[id];\\n                }\\n\\n                this.dispatch(reviews);\\n            }\\n        },\\n        updateAll: {\\n            value: function updateAll() {\\n                var self = this;\\n                var reviews = this.alt.stores.ReviewStore.getState().reviews;\\n\\n                _.each(reviews, function (review) {\\n                    self.actions.updateReview(review);\\n                });\\n\\n                this.dispatch();\\n            }\\n        },\\n        markAsSeen: {\\n            value: function markAsSeen(reviewID) {\\n                this.dispatch(reviewID);\\n            }\\n        },\\n        markAllAsSeen: {\\n            value: function markAllAsSeen() {\\n                var self = this;\\n                var reviews = this.alt.stores.ReviewStore.getState().reviews;\\n\\n                _.each(reviews, function (review) {\\n                    self.actions.markAsSeen(review.id);\\n                });\\n\\n                this.dispatch();\\n            }\\n        }\\n    });\\n\\n    return ReviewAction;\\n})();\\n\\nmodule.exports = alt.createActions(ReviewAction);\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/raw-loader!./src/js/actions/ReviewAction.js\n ** module id = 59\n ** module chunks = 0\n **/"],"sourceRoot":"","file":"0.d0479741d35088aa5c90.hot-update.js"}